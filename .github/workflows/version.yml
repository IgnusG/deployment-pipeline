name: Bump Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Bump major/minor/patch?'
        required: true
        default: 'patch'

jobs:
  validate:
    name: Validate input
    runs-on: ubuntu-latest
    steps:
      - name: Validate input
        uses: actions/github-script@v3
        with:
          script: |
            const level = '${{ github.event.inputs.version }}';

            core.setOutput('historic', false);

            if (['major', 'minor', 'patch'].includes(level)) return;

            core.setFailed(`Use one of major/minor/patch. Not ${level}`);

  bump_version:
    name: Bump Version
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v2
      - uses: dawidd6/action-git-user-config@v1

      - name: Bump version
        run: |
          VERSION=$(make version bump=${{ github.event.inputs.version }} --silent)
          echo "::set-output name=version::$VERSION"
        id: version

      - name: Update main branch
        run: |
          git push --follow-tags || (echo "::error::Pushing the new version failed. You have probably commited other changes in the meantime" && exit 1)

      - name: Create release
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = '${{ github.repository_owner }}';
            const repo = '${{ github.repository }}'.split('/')[1];
            const sha = '${{ github.sha }}';
            const run_url = 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const version = '${{ steps.version.outputs.version }}';

            await github.repos.createRelease({
              owner,
              repo,
              tag_name: version,
              name: `Version Release ${version}`,
              prerelease: true
            });

            await github.repos.createCommitStatus({
              owner,
              repo,
              sha,
              context: 'CI/CD: Version Bump',
              description: 'Version Bump Successful',
              target_url: run_url,
              state: 'success',
            });

      - name: Handle errors
        if: always()
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            if ('${{ job.status }}' !== 'failure') return;

            const owner = '${{ github.repository_owner }}';
            const repo = '${{ github.repository }}'.split('/')[1];
            const sha = '${{ github.sha }}';
            const run_url = 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}';

            await github.repos.createCommitStatus({
              owner,
              repo,
              sha,
              context: 'CI/CD: Version Bump',
              description: 'Version Bump Failed',
              target_url: run_url,
              state: 'failure',
            });
