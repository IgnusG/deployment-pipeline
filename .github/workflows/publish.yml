name: Publish

on:
  release:
    types: [released,prereleased]

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: bahmutov/npm-install@v1

      - run: 'npm ci'
        working-directory: '.github/pipeline'

      - name: Create deployment
        uses: actions/github-script@v3
        with:
          script: |
            const targets = ['Chrome', 'Firefox'];

            const execa = require(`${process.env.GITHUB_WORKSPACE}/.github/pipeline/node_modules/execa`);

            const owner = '${{ github.repository_owner }}';
            const repo = '${{ github.repository }}'.split('/')[1];
            const ref = '${{ github.ref }}';

            const [version] = ref.split('/').reverse();

            const environment = {
              'released': 'Public',
              'prereleased': 'Preview'
            }['${{ github.event.action }}'];

            const channel = environment.toLowerCase();

            for(let target of targets) {
              const { data: { id } } = await github.repos.createDeployment({
                owner,
                repo,
                ref,
                required_contexts: [],
                environment: `${target} - ${environment}`
              });

              try {
                await execa('make', ['publish', `target=${target}`, 'channel=${channel}']);
              } catch (error) {
                github.repos.createDeploymentStatus({
                  owner,
                  repo,
                  deployment_id: id,
                  state: 'error',
                  description: `Failed to publish ${version}: ${error.message}`
                });

                continue;
              }

              github.repos.createDeploymentStatus({
                owner,
                repo,
                deployment_id: id,
                state: 'pending',
                description: `Version ${version} is in review`
              });
            }
